define([], function() {	'use strict';	return ['$http', 'base.services.token', 'base.services.user', '$q', '$location', function($http, TokenService, UserService, $q, $location) {		var service = this;				service.login = function(user, errorCallback) {			var url = 'api/login';			$http.post(url, {username: user.username, password: user.password}).then(function(response) {				TokenService.store(response.headers('X-AUTH-TOKEN'));				// Populate user object				UserService.setUser(TokenService.decode());								$location.url('/');			}, function(response) {				errorCallback(response);			});		};				service.check = function() {			var deferred = $q.defer();			if(TokenService.retrieve() === null) {				deferred.reject('No token');			} else {				var userInfo = TokenService.decode();				if(userInfo === null) {					deferred.reject('Problem decoding token');				} else {					deferred.resolve(userInfo);				}			}			return deferred.promise;		};				service.logout = function() {			return TokenService.clear();		};				return service;	}];});