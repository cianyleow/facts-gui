define([], function() {	'use strict';	return ['$http', 'base.services.token', '$q', '$location', '$state', function($http, TokenService, $q, $location, $state) {		var service = this;				service.login = function(user, redirect, errorCallback) {			var url = 'api/login';			$http.post(url, {username: user.username, password: user.password}).then(function(response) {				TokenService.store(response.headers('X-AUTH-TOKEN'));				if(redirect) {					$location.url(redirect);				} else {					$location.url('/');				}			}, function(response) {				errorCallback(response);			});		};				service.check = function() {			var deferred = $q.defer();			if(TokenService.retrieve() === null) {				deferred.reject('No token');			} else {				var userInfo = TokenService.userInfo();				if(userInfo === null) {					deferred.reject('Problem decoding token');				} else {					deferred.resolve(userInfo);				}			}			return deferred.promise;		};				service.logout = function() {			// Clear token store			TokenService.clear();			$state.go('authorize', {logout: true});		};				return service;	}];});